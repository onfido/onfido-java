/*
 * Onfido API v3.6
 * The Onfido API (v3.6)
 *
 * The version of the OpenAPI document: v3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets webhook_event_resource_type
 */
@JsonAdapter(WebhookEventResourceType.Adapter.class)
public enum WebhookEventResourceType {
  
  CHECK("check"),
  
  REPORT("report"),
  
  AUDIT_LOG("audit_log"),
  
  WORKFLOW_RUN("workflow_run"),
  
  WORKFLOW_TASK("workflow_task"),
  
  WATCHLIST_MONITOR("watchlist_monitor"),
  
  UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

  private String value;

  WebhookEventResourceType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static WebhookEventResourceType fromValue(String value) {
    for (WebhookEventResourceType b : WebhookEventResourceType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    return UNKNOWN_DEFAULT_OPEN_API;
  }

  public static class Adapter extends TypeAdapter<WebhookEventResourceType> {
    @Override
    public void write(final JsonWriter jsonWriter, final WebhookEventResourceType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public WebhookEventResourceType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return WebhookEventResourceType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    WebhookEventResourceType.fromValue(value);
  }
}

